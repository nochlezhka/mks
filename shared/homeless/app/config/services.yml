services:

  app.base_entity.subscriber:
        class: AppBundle\EventSubscriber\BaseEntitySubscriber
        arguments:
              - '@security.token_storage'
        tags:
              - { name: doctrine.event_subscriber, connection: default }

  app.contract.listener:
        class: AppBundle\EventListener\ContractListener
        tags:
              - { name: doctrine.event_listener, event: postPersist}

  app.shelter_history.listener:
        class: AppBundle\EventListener\ShelterRoomListener
        tags:
              - { name: doctrine.event_listener, event: postPersist }
  app.shelter_history_delete.listener:
        class: AppBundle\EventListener\ShelterRoomListener
        tags:
              - { name: doctrine.event_listener, event: postRemove }
#   app.shelter_history_update.listener:
#         class: AppBundle\EventListener\ShelterRoomListener
#         tags:
#               - { name: doctrine.event_listener, event: preUpdate }

  app.notice.listener:
        class: AppBundle\EventListener\NoticeListener
        arguments:
              - '@security.token_storage'
        tags:
              - { name: doctrine.event_listener, event: postLoad}

  app.certificate.listener:
        class: AppBundle\EventListener\CertificateListener
        tags:
              - { name: doctrine.event_listener, event: postPersist}

  app.client.admin:
      class: AppBundle\Admin\ClientAdmin
      tags:
          - { name: sonata.admin, manager_type: orm, label: 'Клиенты' }
      arguments: [null, AppBundle\Entity\Client, AppBundle:CRUD, show_in_dashboard: true]
      calls:
          - [addChild, ['@app.note.admin']]
          - [addChild, ['@app.service.admin']]
          - [addChild, ['@app.delivery_item.admin']]
          - [addChild, ['@app.delivery.admin']]
          - [addChild, ['@app.document.admin']]
          - [addChild, ['@app.document_file.admin']]
          - [addChild, ['@app.contract.admin']]
          - [addChild, ['@app.shelter_history.admin']]
          - [addChild, ['@app.resident_questionnaire.admin']]
          - [addChild, ['@app.certificate.admin']]
          - [addChild, ['@app.contract.admin']]
          - [addChild, ['@app.generated_document.admin']]
          - [addChild, ['@app.notice.admin']]
          - [addChild, ['@app.history_download.admin']]
          - [addChild, ['@app.resident_form_response.admin']]
          - [setLabelTranslatorStrategy, ['@sonata.admin.label.strategy.underscore']]
          - [ setTemplate, ['layout', 'admin/client_show.html.twig']]

#   app.shelter_room.admin:
#     class: AppBundle\Admin\ShelterRoomAdmin
#     tags:
#       - { name: sonata.admin, manager_type: orm, label: 'Комнаты' }
#     arguments: [ ~, AppBundle\Entity\ShelterRoom, AppBundle:CRUD ]
#     calls:
#       - [ setTemplate, ['layout', 'admin/shelter_room.html.twig'] ]

  app.note.admin:
      class: AppBundle\Admin\NoteAdmin
      tags:
          - { name: sonata.admin, manager_type: orm, label: 'Примечания' }
      arguments: [null, AppBundle\Entity\Note, AppBundle:CRUD]
      calls:
          - [setLabelTranslatorStrategy, ['@sonata.admin.label.strategy.underscore']]

  app.history_download.admin:
      class: AppBundle\Admin\HistoryDownloadAdmin
      tags:
          - { name: sonata.admin, manager_type: orm, label: 'История скачиваний' }
      arguments: [~, AppBundle\Entity\HistoryDownload, AppBundle:CRUD]
      calls:
          - [setLabelTranslatorStrategy, ['@sonata.admin.label.strategy.underscore']]

  app.service.admin:
      class: AppBundle\Admin\ServiceAdmin
      tags:
          - { name: sonata.admin, manager_type: orm, label: 'Услуги' }
      arguments: [null, AppBundle\Entity\Service, AppBundle:CRUD]
      calls:
          - [setLabelTranslatorStrategy, ['@sonata.admin.label.strategy.underscore']]

  app.client_field.admin:
      class: AppBundle\Admin\ClientFieldAdmin
      tags:
          - { name: sonata.admin, manager_type: orm, label: 'Анкета клиента' }
      arguments: [null, AppBundle\Entity\ClientField, SonataAdminBundle:CRUD]
      calls:
          - [addChild, ['@app.client_field_option.admin']]
          - [setLabelTranslatorStrategy, ['@sonata.admin.label.strategy.underscore']]

  app.client_field_option.admin:
      class: AppBundle\Admin\ClientFieldOptionAdmin
      tags:
          - { name: sonata.admin, manager_type: orm, label: 'Вариант выбора' }
      arguments: [null, AppBundle\Entity\ClientFieldOption, SonataAdminBundle:CRUD]
      calls:
          - [setLabelTranslatorStrategy, ['@sonata.admin.label.strategy.underscore']]

#   app.region.admin:
#       class: AppBundle\Admin\RegionAdmin
#       tags:
#           - { name: sonata.admin, manager_type: orm, label: 'Регионы' }
#       arguments: [null, AppBundle\Entity\Region, SonataAdminBundle:CRUD]
#       calls:
#           - [addChild, ['@app.district.admin']]
#           - [setLabelTranslatorStrategy, ['@sonata.admin.label.strategy.underscore']]

  app.district.admin:
      class: AppBundle\Admin\DistrictAdmin
      tags:
          - { name: sonata.admin, manager_type: orm, label: 'Районы' }
      arguments: [null, AppBundle\Entity\District, SonataAdminBundle:CRUD]
      calls:
          - [setLabelTranslatorStrategy, ['@sonata.admin.label.strategy.underscore']]

  app.document.admin:
      class: AppBundle\Admin\DocumentAdmin
      tags:
          - { name: sonata.admin, manager_type: orm, label: 'Документы' }
      arguments: [null, AppBundle\Entity\Document, SonataAdminBundle:CRUD]
      calls:
          - [setLabelTranslatorStrategy, ['@sonata.admin.label.strategy.underscore']]

  app.document_file.admin:
      class: AppBundle\Admin\DocumentFileAdmin
      tags:
          - { name: sonata.admin, manager_type: orm, label: 'Загруженные файлы' }
      arguments: [null, AppBundle\Entity\DocumentFile, SonataAdminBundle:CRUD]
      calls:
          - [setLabelTranslatorStrategy, ['@sonata.admin.label.strategy.underscore']]

  app.contract.admin:
      class: AppBundle\Admin\ContractAdmin
      tags:
          - { name: sonata.admin, manager_type: orm, label: 'Сервисные планы' }
      arguments: [null, AppBundle\Entity\Contract, AppBundle:CRUD]
      calls:
          - [setLabelTranslatorStrategy, ['@sonata.admin.label.strategy.underscore']]

  app.resident_questionnaire.admin:
      class: AppBundle\Admin\ResidentQuestionnaireAdmin
      tags:
          - { name: sonata.admin, manager_type: orm, label: 'Анкета проживающего' }
      arguments: [null, AppBundle\Entity\ResidentQuestionnaire, AppBundle:CRUD]
      calls:
          - [setLabelTranslatorStrategy, ['@sonata.admin.label.strategy.underscore']]

  app.contract_item.admin:
      class: AppBundle\Admin\ContractItemAdmin
      tags:
          - { name: sonata.admin, manager_type: orm, label: 'Пункты сервисного плана' }
      arguments: [null, AppBundle\Entity\ContractItem, SonataAdminBundle:CRUD]
      calls:
          - [setLabelTranslatorStrategy, ['@sonata.admin.label.strategy.underscore']]

  app.shelter_history.admin:
      class: AppBundle\Admin\ShelterHistoryAdmin
      tags:
          - { name: sonata.admin, manager_type: orm, label: 'Проживание в приюте' }
      arguments: [null, AppBundle\Entity\ShelterHistory, SonataAdminBundle:CRUD]
      calls:
          - [setLabelTranslatorStrategy, ['@sonata.admin.label.strategy.underscore']]

  app.shelter_leaving_reason.admin:
    class: AppBundle\Admin\ShelterLeavingReasonAdmin
    tags:
      - { name: sonata.admin, manager_type: orm, label: 'Причины выбытия из приюта' }
    arguments: [ null, AppBundle\Entity\ShelterLeavingReason, SonataAdminBundle:CRUD ]
    calls:
      - [ setLabelTranslatorStrategy, [ '@sonata.admin.label.strategy.underscore' ] ]

  app.certificate.admin:
      class: AppBundle\Admin\CertificateAdmin
      tags:
          - { name: sonata.admin, manager_type: orm, label: 'Справки' }
      arguments: [null, AppBundle\Entity\Certificate, AppBundle:CRUD]
      calls:
          - [setLabelTranslatorStrategy, ['@sonata.admin.label.strategy.underscore']]

  app.generated_document.admin:
      class: AppBundle\Admin\GeneratedDocumentAdmin
      tags:
          - { name: sonata.admin, manager_type: orm, label: 'Построить документ' }
      arguments: [null, AppBundle\Entity\GeneratedDocument, AppBundle:CRUD]
      calls:
          - [setLabelTranslatorStrategy, ['@sonata.admin.label.strategy.underscore']]

  app.notice.admin:
      class: AppBundle\Admin\NoticeAdmin
      tags:
          - { name: sonata.admin, manager_type: orm, label: 'Напоминания' }
      arguments: [null, AppBundle\Entity\Notice, SonataAdminBundle:CRUD]
      calls:
          - [setLabelTranslatorStrategy, ['@sonata.admin.label.strategy.underscore']]
          - [ setTemplate, ['list', '/admin/notice_list.html.twig']]

  app.service_type.admin:
      class: AppBundle\Admin\ServiceTypeAdmin
      tags:
          - { name: sonata.admin, manager_type: orm, label: 'Типы услуг' }
      arguments: [null, AppBundle\Entity\ServiceType, SonataAdminBundle:CRUD]
      calls:
          - [setLabelTranslatorStrategy, ['@sonata.admin.label.strategy.underscore']]

  app.delivery_item.admin:
      class: AppBundle\Admin\DeliveryItemAdmin
      tags:
          - { name: sonata.admin, manager_type: orm, label: 'Предметы выдачи' }
      arguments: [null, AppBundle\Entity\DeliveryItem, SonataAdminBundle:CRUD]
      calls:
          - [setLabelTranslatorStrategy, ['@sonata.admin.label.strategy.underscore']]

  app.delivery.admin:
      class: AppBundle\Admin\DeliveryAdmin
      tags:
          - { name: sonata.admin, manager_type: orm, label: 'Выдачи' }
      arguments: [null, AppBundle\Entity\Delivery, SonataAdminBundle:CRUD]
      calls:
          - [setLabelTranslatorStrategy, ['@sonata.admin.label.strategy.underscore']]

  app.contract_item_type.admin:
      class: AppBundle\Admin\ContractItemTypeAdmin
      tags:
          - { name: sonata.admin, manager_type: orm, label: 'Типы пунктов договоров' }
      arguments: [null, AppBundle\Entity\ContractItemType, SonataAdminBundle:CRUD]
      calls:
          - [setLabelTranslatorStrategy, ['@sonata.admin.label.strategy.underscore']]

  app.generated_document_type.admin:
      class: AppBundle\Admin\GeneratedDocumentTypeAdmin
      tags:
          - { name: sonata.admin, manager_type: orm, label: 'Типы постр. док-тов' }
      arguments: [null, AppBundle\Entity\GeneratedDocumentType, SonataAdminBundle:CRUD]
      calls:
          - [setLabelTranslatorStrategy, ['@sonata.admin.label.strategy.underscore']]

  app.generated_document_start_text.admin:
      class: AppBundle\Admin\GeneratedDocumentStartTextAdmin
      tags:
          - { name: sonata.admin, manager_type: orm, label: 'Преамбулы постр. док-тов' }
      arguments: [null, AppBundle\Entity\GeneratedDocumentStartText, SonataAdminBundle:CRUD]
      calls:
          - [setLabelTranslatorStrategy, ['@sonata.admin.label.strategy.underscore']]

  app.generated_document_end_text.admin:
      class: AppBundle\Admin\GeneratedDocumentEndTextAdmin
      tags:
          - { name: sonata.admin, manager_type: orm, label: 'Заключения постр. док-тов' }
      arguments: [null, AppBundle\Entity\GeneratedDocumentEndText, SonataAdminBundle:CRUD]
      calls:
          - [setLabelTranslatorStrategy, ['@sonata.admin.label.strategy.underscore']]

  app.certificate_type.admin:
      class: AppBundle\Admin\CertificateTypeAdmin
      tags:
          - { name: sonata.admin, manager_type: orm, label: 'Типы справок' }
      arguments: [null, AppBundle\Entity\CertificateType, SonataAdminBundle:CRUD]
      calls:
          - [setLabelTranslatorStrategy, ['@sonata.admin.label.strategy.underscore']]

  app.menu_item.admin:
      class: AppBundle\Admin\MenuItemAdmin
      tags:
          - { name: sonata.admin, manager_type: orm, label: 'Отображение разделов' }
      arguments: [null, AppBundle\Entity\MenuItem, SonataAdminBundle:CRUD]
      calls:
          - [setLabelTranslatorStrategy, ['@sonata.admin.label.strategy.underscore']]

  app.position.admin:
      class: AppBundle\Admin\PositionAdmin
      tags:
          - { name: sonata.admin, manager_type: orm, label: 'Должности' }
      arguments: [null, AppBundle\Entity\Position, SonataAdminBundle:CRUD]
      calls:
          - [setLabelTranslatorStrategy, ['@sonata.admin.label.strategy.underscore']]
  app.branch.admin:
      class: AppBundle\Admin\BranchAdmin
      tags:
        - { name: sonata.admin, manager_type: orm, label: 'Отделения' }
      arguments: [null, AppBundle\Entity\Branch, SonataAdminBundle:CRUD, '@app.branch_service']
      calls:
        - [setLabelTranslatorStrategy, ['@sonata.admin.label.strategy.underscore']]


  app.client_form.admin:
      class: AppBundle\Admin\ClientFormAdmin
      tags:
          - { name: sonata.admin, manager_type: orm, label: 'Анкета проживавшего' }
      arguments: [~, AppBundle\Entity\ClientForm, SonataAdminBundle:CRUD]
      calls:
          - [setLabelTranslatorStrategy, ['@sonata.admin.label.strategy.underscore']]
          - [addChild, ['@app.client_form_field.admin', 'form']]

  app.shelter_room.admin:
      class: AppBundle\Admin\ShelterRoomAdmin
      tags:
          - { name: sonata.admin, manager_type: orm, label: 'Приют' }
      arguments: [ ~, AppBundle\Entity\ShelterRoom, AppBundle:CRUD ]
      calls:
          - [ setTemplate, ['layout', 'admin/shelter_room.html.twig'] ]

  app.client_form_field.admin:
    class: AppBundle\Admin\ClientFormFieldAdmin
    tags:
      - { name: sonata.admin, manager_type: orm, label: 'ClientFormField' }
    arguments: [~, AppBundle\Entity\ClientFormField, SonataAdminBundle:CRUD]
    calls:
      - [setLabelTranslatorStrategy, ['@sonata.admin.label.strategy.underscore']]

  app.resident_form_response.admin:
    class: AppBundle\Admin\ResidentFormResponseAdmin
    tags:
      - { name: sonata.admin, manager_type: orm, label: 'Анкета проживающего' }
    arguments: [~, AppBundle\Entity\ClientFormResponse, SonataAdminBundle:CRUD]
    calls:
      - [ setLabelTranslatorStrategy, ['@sonata.admin.label.strategy.underscore']]

  app.file_type:
      class: AppBundle\Form\Type\AppFileType
      tags:
          - { name: form.type, alias: 'app_file' }
      calls:
          - [setStorage, ['@vich_uploader.storage']]

  app.photo_type:
      class: AppBundle\Form\Type\AppPhotoType
      tags:
          - { name: form.type, alias: 'app_photo' }

  app.contract_duration_type:
      class: AppBundle\Form\Type\AppContractDurationType
      tags:
          - { name: form.type, alias: 'app_contract_duration' }

  app.render_service:
    class: AppBundle\Service\RenderService
    arguments: ['@templating', '@kernel', '@twig', '@app.branch_service']

  app.certificate_recreator_service:
    class: AppBundle\Service\CertificateRecreator
    arguments: ['@doctrine.orm.default_entity_manager']
    autowire: true

  app.report_service:
    class: AppBundle\Service\ReportService
    arguments: ['@doctrine.orm.default_entity_manager']
    autowire: true

  app.additional_field_to_array.transformer:
    class: AppBundle\Form\DataTransformer\AdditionalFieldToArrayTransformer
    arguments: ['@app.client_field_option.repository']

  app.certificate_type_to_choice_field_mask_type.transformer:
    class: AppBundle\Form\DataTransformer\CertificateTypeToChoiceFieldMaskTypeTransformer
    arguments: ['@app.certificate_type.repository']

  app.position_to_choice_field_mask_type.transformer:
    class: AppBundle\Form\DataTransformer\PositionToChoiceFieldMaskTypeTransformer
    arguments: ['@app.position_option.repository']

  app.position_option.repository:
    class: AppBundle\Repository\PositionRepository
    factory: ['@doctrine.orm.default_entity_manager', getRepository]
    arguments: ['AppBundle\Entity\Position']


  app.branch_to_choice_field_mask_type.transformer:
    class: AppBundle\Form\DataTransformer\BranchToChoiceFieldMaskTypeTransformer
    arguments: ['@app.branch_option.repository']

  app.branch_option.repository:
      class: AppBundle\Repository\BranchRepository
      factory: ['@doctrine.orm.default_entity_manager', getRepository]
      arguments: ['AppBundle\Entity\Branch']

  app.client_field_option.repository:
    class: AppBundle\Repository\ClientFieldOptionRepository
    factory: ['@doctrine.orm.default_entity_manager', getRepository]
    arguments: ['AppBundle\Entity\ClientFieldOption']

  app.certificate_type.repository:
    class: AppBundle\Repository\CertificateTypeRepository
    factory: ['@doctrine.orm.default_entity_manager', getRepository]
    arguments: ['AppBundle\Entity\CertificateType']

  app.service_type.repository:
    class: AppBundle\Repository\ServiceTypeRepository
    factory: ['@doctrine.orm.default_entity_manager', getRepository]
    arguments: ['AppBundle\Entity\ServiceType']

  app.service_type_to_choice_field_mask_type.transformer:
    class: AppBundle\Form\DataTransformer\ServiceTypeToChoiceFieldMaskTypeTransformer
    arguments: ['@app.service_type.repository']

  app.docx_naming_service:
    class: AppBundle\Service\DOCXNamingService
  app.pdf_naming_service:
    class: AppBundle\Service\PDFNamingService

  app.client_form_response.repository:
    class: AppBundle\Repository\ClientFormResponseRepository
    factory: ['@doctrine.orm.default_entity_manager', getRepository]
    arguments: ['AppBundle\Entity\ClientFormResponse']

  app.client_form.repository:
    class: AppBundle\Repository\ClientFormRepository
    factory: ['@doctrine.orm.default_entity_manager', getRepository]
    arguments: ['AppBundle\Entity\ClientForm']

  app.resident_questionnaire_converter:
    class: AppBundle\Service\ResidentQuestionnaireConverter
    arguments:
      - '@doctrine.orm.entity_manager'
      - '@app.client_form_response.repository'
      - '@app.client_form.repository'

  app.meta_service:
    class: AppBundle\Service\MetaService
    arguments: ['@doctrine.orm.entity_manager']

  app.branch_service:
    class: AppBundle\Service\BranchService
    arguments: ['@service_container']

  app.security.api_authenticator:
    class: AppBundle\Security\ApiAuthenticator
