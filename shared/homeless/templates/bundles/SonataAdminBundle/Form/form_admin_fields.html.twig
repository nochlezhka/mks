{% extends '@!SonataAdmin/Form/form_admin_fields.html.twig' %}

{% block sonata_type_choice_field_mask_widget %}
    {{ block('choice_widget') }}
     {#Taking the form name excluding ending field glue character#}
    {% set main_form_name = id|slice(0, (id|length - name|length)-1) %}
    <script>
        jQuery(document).ready(function() {
            var allFields = {{ all_fields|json_encode|raw }};
            var map = {{ map|json_encode|raw }};
            // мапа с именами скрываемых полей, у которых изначально был выставлен артибут `required`
            var requiredHidden = [];

            var showMaskChoiceEl = jQuery('#{{ main_form_name }}_{{ name }}');

            showMaskChoiceEl.on('change', function () {
                choice_field_mask_show(jQuery(this).val());
            });

            var elIdByName = function(fieldName) {
                return '#{{ main_form_name }}_' + fieldName;
            }
            function choice_field_mask_show(val) {
                var controlGroupIdFunc = function (field) {
                    // Most of fields are named with an underscore
                    var defaultFieldId = '#sonata-ba-field-container-{{ main_form_name }}_' + field;

                    // Some fields may be named with a dash (like keys of immutable array form type)
                    if (jQuery(defaultFieldId).length === 0) {
                        return '#sonata-ba-field-container-{{ main_form_name }}-' + field;
                    }

                    return defaultFieldId;
                };

                jQuery.each(allFields, function (i, field) {
                    jQuery(controlGroupIdFunc(field)).hide();
                    jQuery(elIdByName(field)).prop('required', false);
                });

                var showFields = [];
                if (Array.isArray(val)) {
                    jQuery.each(val, function (i, valOne) {
                        if (map[valOne]) {
                            showFields = map[valOne];
                        }
                    });
                } else if (map[val]) {
                    showFields = map[val];
                } else if (typeof map['*'] !== "undefined" && val) {
                    showFields = map['*'];
                }
                if (showFields.length > 0) {
                    jQuery.each(showFields, function (i, field) {
                        if (requiredHidden[field]) {
                            var fieldEl = jQuery(elIdByName(field));
                            // не возвращаем `required` на поля с Select2. С ним сообщения HTML5 валидации не видны.
                            // полагаемся на серверную валидацию
                            if (!fieldEl.data('select2')) {
                                fieldEl.prop('required', true);
                            }
                        }
                        jQuery(controlGroupIdFunc(field)).show();
                    });
                }
            }
            jQuery.each(allFields, function (i, field) {
                if (jQuery(elIdByName(field)).prop('required')) {
                    requiredHidden[field] = true;
                }
            });
            choice_field_mask_show(showMaskChoiceEl.val());

            function selectFieldShow(selects) {
                var selectedCount = 0;
                $(selects).each(function (i, item) {
                    if ($(item).val()) {
                        selectedCount++;
                    }
                });
                jQuery.each($('.form-group'), function (i, item) {
                    if ($(item).children('.control-label') && ($(item).children('.control-label').text().trim() === 'Причина кончины' || $(item).children('.control-label').text().trim() === 'Город кончины')) {
                        if (selectedCount) {
                            $(item).show();
                        } else {
                            $(item).hide();
                        }
                    }
                });
            }

            jQuery.each($('.form-group'), function (i, item) {
                if ($(item).children('.control-label') && $(item).children('.control-label').text().trim() === 'Дата кончины') {
                    var selects = $(item).find('select');
                    selects.each(function(i, item){
                        $(item).on('change', function () {
                            selectFieldShow(selects);
                        });
                    });
                    selectFieldShow(selects);
                }
            })
        });

    </script>
{% endblock %}

{% block sonata_admin_orm_one_to_many_widget %}
    {% include 'admin/edit_orm_one_to_many.html.twig' %}
{% endblock %}
