---
- hosts: all
  #  collections:
  #    - nochlezhka.lib
  become: true
  vars:
    mks_version: rc/0.3.0


    docker_install_compose_plugin: true
    docker_edition: 'ce'
    docker_packages_state: present
    docker_apt_release_channel: stable
    docker_users:
      - ubuntu
    docker_packages:
      - "docker-{{ docker_edition }}"
      - "docker-{{ docker_edition }}-cli"
      - "docker-{{ docker_edition }}-rootless-extras"
  pre_tasks:
    - name: Update apt-get repo and cache
      apt: update_cache=yes force_apt_get=yes cache_valid_time=3600
  roles:
    # TODO: let's fork this to mks org later
    - role: geerlingguy.docker
  tasks:
    - name: Create MKS directory if it does not exist
      ansible.builtin.file:
        path: /home/ubuntu/mks
        state: directory
        mode: '0755'

    - name: Recursively remove MKS sources directory
      ansible.builtin.file:
        path: /home/ubuntu/mks/sources
        state: absent

    - name: Create MKS sources directory if it does not exist
      ansible.builtin.file:
        path: /home/ubuntu/mks/sources
        state: directory
        mode: '0755'

    - name: Create MKS deploy directory if it does not exist
      ansible.builtin.file:
        path: /home/ubuntu/mks/deploy
        state: directory
        mode: '0755'

    - name: Clone a github repository
      git:
        repo: https://github.com/nochlezhka/mks.git
        dest: /home/ubuntu/mks/sources
        clone: yes
        update: yes
        version: "{{ mks_version }}"

    - name: Copy docker-compose file
      ansible.builtin.copy:
        src: /home/ubuntu/mks/sources/docker-compose.yml
        dest: /home/ubuntu/mks/deploy/docker-compose.yml
        remote_src: yes

    - name: Copy .env.dist => .env
      ansible.builtin.copy:
        src: /home/ubuntu/mks/sources/.env.dist
        dest: /home/ubuntu/mks/deploy/.env
        remote_src: yes

    # TODO: change these vars MYSQL_PASSWORD, MYSQL_ROOT_PASSWORD, DB_PASSWORD

    - name: Deploy a new version of MKS
      ansible.builtin.shell: |
        cd /home/ubuntu/mks/deploy
        # TODO: move this version to vars
        export MKS_VERSION={{ mks_version | replace("/", "-") }}
        docker-compose --profile=local up -d --no-build

    - name: Execute migrations
      ansible.builtin.shell: |
        cd /home/ubuntu/mks/deploy
        docker-compose exec php ./app/console doctrine:migrations:migrate

    - name: Change admin password
      ansible.builtin.shell: |
        cd /home/ubuntu/mks/deploy
        # TODO
        # docker-compose exec php ./app/console fos:user:change-password admin